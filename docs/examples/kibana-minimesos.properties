# Introduction
# This example uses minimesos to run kibana.
# First, start minimesos with three agents, and then start an elasticsearch instance with `docker run -d elasticsearch:latest`

# Required application name for Spring
spring.application.name=kibana-minimesos

# Mesos framework name
mesos.framework.name=kibana-minimesos

# Mesos settings
mesos.master=zk://${mesos.zookeeper.server}/mesos
#mesos.zookeeper.server=172.17.0.3:2181 # Usually injected.

# ES location
# elasticsearch.http=http://172.17.0.2:9200 # Usually injected.

# Task resources
mesos.resources.cpus=0.5
mesos.resources.mem=256
mesos.resources.count=3

# Docker mode
#mesos.docker.image=kibana:latest
#mesos.docker.network=BRIDGE
#mesos.command=kibana --elasticsearch ${elasticsearch.http}
#mesos.healthCheck.command=wget -q localhost:5061

# Command mode
mesos.resources.ports.UI_5061.host=ANY
mesos.uri[0]=https://gist.githubusercontent.com/philwinder/592a1ab2db40431c1b08/raw/kibana.yml
mesos.uri[1]=https://download.elastic.co/kibana/kibana/kibana-4.4.1-linux-x64.tar.gz
mesos.command= cp $MESOS_SANDBOX/kibana.yml $MESOS_SANDBOX/kibana-*/config/kibana.yml ; cd kibana-* ; bin/kibana --port=$UI_5061 --elasticsearch ${elasticsearch.http}
mesos.healthCheck.command=wget -q localhost:$UI_5061

# Log level
logging.level.com.containersolutions.mesos=DEBUG
